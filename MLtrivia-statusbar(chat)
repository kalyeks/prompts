

# UI Header & Bars 

* Always render the following **three lines** (in this order) at the start of every question and immediately after resolving an answer or hint:

Q{q}/{total} | Score: {score}{fires?}{bulbs?}
Answers: {answers_bar}
Topic: {topic}

(Render these as bold text, not inside a code block or monospace formatting.)

# Segments

* **`{fires?}`**
  If `streak > 0`, append `|` + `"🔥"*streak`; otherwise omit entirely (no extra pipe or spaces).

* **`{bulbs?}`**
  If `hints_remaining > 0`, append `|` + `"💡"*hints_remaining`; otherwise omit entirely (no extra pipe or spaces).

* **`{answers_bar}`**
  A 10-symbol row (spaced) showing per-question outcomes in order:

  * Correct = `✅`
  * Wrong = `❌`
  * Future (unanswered) = `⬜`
    Example: `✅ ❌ ✅ ⬜ ⬜ ⬜ ⬜ ⬜ ⬜ ⬜`

# Formatting Rules

* Use monospace assumptions; keep field order **exactly** as shown.
* Do **not** show the word “Hints” anywhere. Only show bulbs `💡` while any remain.
* Never leave a dangling pipe `|`. Omit `{fires?}`/`{bulbs?}` cleanly when empty.
* Show `Score: {score}` **without** delta (no `Δ` anywhere).

# Fixed Hint Logic (Lightbulbs)
* Hints start at 3 bulbs per game: 💡💡💡.
* When a hint is used:
    * Apply −1 to score immediately.
    * Decrement hints_remaining by 1 and remove one bulb from the right (e.g., 💡💡 → 💡 → none).
* Bulbs must always persist across questions until consumed. After resolving any answer, the next question’s header must re-render with the correct number of remaining bulbs.
* No placeholders for used hints (do not show empty slots). When zero remain, show no bulbs at all.
* Prompt line must adapt:
    * If hints_remaining > 0: Type A/B/C/D to answer, or ‘hint’ (−1).
    * If hints_remaining = 0: Type A/B/C/D to answer. (Do not mention hints.)
* If the player types “hint” with zero bulbs: reply No hints left. and immediately re-render the same header and question without consuming anything.
* When a hint is given:
1. Show the hint message.
2. Immediately re-render the full set of answer choices (with bolded letters), directly under the hint.
3. Keep the prompt line at the bottom.

# Streak (Fires)

* Maintain a **correct-answer streak** counter.
* On each correct answer: `streak += 1`.
  On any wrong answer: `streak = 0`.
* Render fire as `"🔥"*streak` when `streak > 0`; otherwise render no fire segment.

# Answers Bar Update

* After resolving each question, update the **Answers** row at that question’s index:

  * Place `✅` if the player’s answer was correct; `❌` if wrong.
  * Future questions remain `⬜`.
* Always refresh and display the updated three-line header (including the Answers row) **before** moving on automatically to the next question.

# Score & Penalties (No Delta)

* Scoring remains: correct `+1`, wrong `−2`, each hint `−1` (applied immediately).
* Only display `Score: {score}` (signed integer, e.g., `+1`, `−5`).
  Do **not** display per-turn deltas.

# Fixed Render Order (Per Interaction)
1. Show the three-line header → question → Concepts panel → prompt line (with bulbs if any).
2. If the player requests a hint and bulbs remain:
    * Apply −1, update bulbs, and re-render the same header & question (do not advance).
3. When the player answers:
    * Resolve (show correct letter + brief explanation).
    * Update score, streak, and answers bar (bulbs unchanged).
    * Advance to the next question, and always carry forward the current hints_remaining state into the new header. Bulbs are global across the game, not per-question.


# Example (Reference Only)

Q6/10 | Score: -5 | 🔥🔥🔥 | 💡💡
Answers: ✅ ❌ ✅ ❌ ❌ ⬜ ⬜ ⬜ ⬜ ⬜
Topic: Regularization


-------
